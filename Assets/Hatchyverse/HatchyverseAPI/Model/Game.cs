/*
 * hatchyverse-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = HatchyverseAPI.Client.OpenAPIDateConverter;

namespace HatchyverseAPI.Model
{
    /// <summary>
    /// Game
    /// </summary>
    [DataContract(Name = "Game")]
    public partial class Game
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Game" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Game() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Game" /> class.
        /// </summary>
        /// <param name="uid">uid (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="description">description (required).</param>
        /// <param name="itchioEmbedLink">itchioEmbedLink.</param>
        /// <param name="itchioLink">itchioLink.</param>
        /// <param name="status">status.</param>
        /// <param name="requirement">requirement.</param>
        /// <param name="views">views.</param>
        /// <param name="slug">slug.</param>
        /// <param name="deeplink">deeplink.</param>
        /// <param name="previewImage">previewImage.</param>
        /// <param name="images">images.</param>
        /// <param name="downloadLink">downloadLink.</param>
        /// <param name="androidLink">androidLink.</param>
        /// <param name="iosLink">iosLink.</param>
        public Game(string uid = default(string), string name = default(string), string description = default(string), string itchioEmbedLink = default(string), string itchioLink = default(string), string status = default(string), string requirement = default(string), double views = default(double), string slug = default(string), string deeplink = default(string), string previewImage = default(string), List<string> images = default(List<string>), string downloadLink = default(string), string androidLink = default(string), string iosLink = default(string))
        {
            // to ensure "uid" is required (not null)
            if (uid == null)
            {
                throw new ArgumentNullException("uid is a required property for Game and cannot be null");
            }
            this.Uid = uid;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for Game and cannot be null");
            }
            this.Name = name;
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for Game and cannot be null");
            }
            this.Description = description;
            this.ItchioEmbedLink = itchioEmbedLink;
            this.ItchioLink = itchioLink;
            this.Status = status;
            this.Requirement = requirement;
            this.Views = views;
            this.Slug = slug;
            this.Deeplink = deeplink;
            this.PreviewImage = previewImage;
            this.Images = images;
            this.DownloadLink = downloadLink;
            this.AndroidLink = androidLink;
            this.IosLink = iosLink;
        }

        /// <summary>
        /// Gets or Sets Uid
        /// </summary>
        [DataMember(Name = "uid", IsRequired = true, EmitDefaultValue = true)]
        public string Uid { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ItchioEmbedLink
        /// </summary>
        [DataMember(Name = "itchioEmbedLink", EmitDefaultValue = false)]
        public string ItchioEmbedLink { get; set; }

        /// <summary>
        /// Gets or Sets ItchioLink
        /// </summary>
        [DataMember(Name = "itchioLink", EmitDefaultValue = false)]
        public string ItchioLink { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Requirement
        /// </summary>
        [DataMember(Name = "requirement", EmitDefaultValue = false)]
        public string Requirement { get; set; }

        /// <summary>
        /// Gets or Sets Views
        /// </summary>
        [DataMember(Name = "views", EmitDefaultValue = false)]
        public double Views { get; set; }

        /// <summary>
        /// Gets or Sets Slug
        /// </summary>
        [DataMember(Name = "slug", EmitDefaultValue = false)]
        public string Slug { get; set; }

        /// <summary>
        /// Gets or Sets Deeplink
        /// </summary>
        [DataMember(Name = "deeplink", EmitDefaultValue = false)]
        public string Deeplink { get; set; }

        /// <summary>
        /// Gets or Sets PreviewImage
        /// </summary>
        [DataMember(Name = "previewImage", EmitDefaultValue = false)]
        public string PreviewImage { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = false)]
        public List<string> Images { get; set; }

        /// <summary>
        /// Gets or Sets DownloadLink
        /// </summary>
        [DataMember(Name = "downloadLink", EmitDefaultValue = false)]
        public string DownloadLink { get; set; }

        /// <summary>
        /// Gets or Sets AndroidLink
        /// </summary>
        [DataMember(Name = "androidLink", EmitDefaultValue = false)]
        public string AndroidLink { get; set; }

        /// <summary>
        /// Gets or Sets IosLink
        /// </summary>
        [DataMember(Name = "iosLink", EmitDefaultValue = false)]
        public string IosLink { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Game {\n");
            sb.Append("  Uid: ").Append(Uid).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ItchioEmbedLink: ").Append(ItchioEmbedLink).Append("\n");
            sb.Append("  ItchioLink: ").Append(ItchioLink).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Requirement: ").Append(Requirement).Append("\n");
            sb.Append("  Views: ").Append(Views).Append("\n");
            sb.Append("  Slug: ").Append(Slug).Append("\n");
            sb.Append("  Deeplink: ").Append(Deeplink).Append("\n");
            sb.Append("  PreviewImage: ").Append(PreviewImage).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  DownloadLink: ").Append(DownloadLink).Append("\n");
            sb.Append("  AndroidLink: ").Append(AndroidLink).Append("\n");
            sb.Append("  IosLink: ").Append(IosLink).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
