/*
 * hatchyverse-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = HatchyverseAPI.Client.OpenAPIDateConverter;

namespace HatchyverseAPI.Model
{
    /// <summary>
    /// User
    /// </summary>
    [DataContract(Name = "User")]
    public partial class User
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="User" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected User() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="User" /> class.
        /// </summary>
        /// <param name="uid">uid (required).</param>
        /// <param name="email">email (required).</param>
        /// <param name="referralCode">referralCode (required).</param>
        /// <param name="referralCount">referralCount (required).</param>
        /// <param name="referrerId">referrerId.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="picture">picture.</param>
        /// <param name="photoUrl">photoUrl.</param>
        /// <param name="disabled">disabled.</param>
        /// <param name="roles">roles.</param>
        /// <param name="bio">bio.</param>
        /// <param name="xpPoints">xpPoints.</param>
        /// <param name="mainWallet">mainWallet.</param>
        /// <param name="vouchersMerged">vouchersMerged.</param>
        /// <param name="discordConfirmed">discordConfirmed.</param>
        /// <param name="discordId">discordId.</param>
        /// <param name="discordUsername">discordUsername.</param>
        /// <param name="wallets">wallets.</param>
        public User(string uid = default(string), string email = default(string), string referralCode = default(string), double referralCount = default(double), string referrerId = default(string), string displayName = default(string), string picture = default(string), string photoUrl = default(string), bool disabled = default(bool), List<string> roles = default(List<string>), string bio = default(string), double xpPoints = default(double), string mainWallet = default(string), bool vouchersMerged = default(bool), bool discordConfirmed = default(bool), string discordId = default(string), string discordUsername = default(string), List<UserWalletsInner> wallets = default(List<UserWalletsInner>))
        {
            // to ensure "uid" is required (not null)
            if (uid == null)
            {
                throw new ArgumentNullException("uid is a required property for User and cannot be null");
            }
            this.Uid = uid;
            // to ensure "email" is required (not null)
            if (email == null)
            {
                throw new ArgumentNullException("email is a required property for User and cannot be null");
            }
            this.Email = email;
            // to ensure "referralCode" is required (not null)
            if (referralCode == null)
            {
                throw new ArgumentNullException("referralCode is a required property for User and cannot be null");
            }
            this.ReferralCode = referralCode;
            this.ReferralCount = referralCount;
            this.ReferrerId = referrerId;
            this.DisplayName = displayName;
            this.Picture = picture;
            this.PhotoUrl = photoUrl;
            this.Disabled = disabled;
            this.Roles = roles;
            this.Bio = bio;
            this.XpPoints = xpPoints;
            this.MainWallet = mainWallet;
            this.VouchersMerged = vouchersMerged;
            this.DiscordConfirmed = discordConfirmed;
            this.DiscordId = discordId;
            this.DiscordUsername = discordUsername;
            this.Wallets = wallets;
        }

        /// <summary>
        /// Gets or Sets Uid
        /// </summary>
        [DataMember(Name = "uid", IsRequired = true, EmitDefaultValue = true)]
        public string Uid { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", IsRequired = true, EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets ReferralCode
        /// </summary>
        [DataMember(Name = "referralCode", IsRequired = true, EmitDefaultValue = true)]
        public string ReferralCode { get; set; }

        /// <summary>
        /// Gets or Sets ReferralCount
        /// </summary>
        [DataMember(Name = "referralCount", IsRequired = true, EmitDefaultValue = true)]
        public double ReferralCount { get; set; }

        /// <summary>
        /// Gets or Sets ReferrerId
        /// </summary>
        [DataMember(Name = "referrerId", EmitDefaultValue = false)]
        public string ReferrerId { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name = "displayName", EmitDefaultValue = false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets Picture
        /// </summary>
        [DataMember(Name = "picture", EmitDefaultValue = false)]
        public string Picture { get; set; }

        /// <summary>
        /// Gets or Sets PhotoUrl
        /// </summary>
        [DataMember(Name = "photoUrl", EmitDefaultValue = false)]
        public string PhotoUrl { get; set; }

        /// <summary>
        /// Gets or Sets Disabled
        /// </summary>
        [DataMember(Name = "disabled", EmitDefaultValue = true)]
        public bool Disabled { get; set; }

        /// <summary>
        /// Gets or Sets Roles
        /// </summary>
        [DataMember(Name = "roles", EmitDefaultValue = false)]
        public List<string> Roles { get; set; }

        /// <summary>
        /// Gets or Sets Bio
        /// </summary>
        [DataMember(Name = "bio", EmitDefaultValue = false)]
        public string Bio { get; set; }

        /// <summary>
        /// Gets or Sets XpPoints
        /// </summary>
        [DataMember(Name = "xpPoints", EmitDefaultValue = false)]
        public double XpPoints { get; set; }

        /// <summary>
        /// Gets or Sets MainWallet
        /// </summary>
        [DataMember(Name = "mainWallet", EmitDefaultValue = false)]
        public string MainWallet { get; set; }

        /// <summary>
        /// Gets or Sets VouchersMerged
        /// </summary>
        [DataMember(Name = "vouchersMerged", EmitDefaultValue = true)]
        public bool VouchersMerged { get; set; }

        /// <summary>
        /// Gets or Sets DiscordConfirmed
        /// </summary>
        [DataMember(Name = "discordConfirmed", EmitDefaultValue = true)]
        public bool DiscordConfirmed { get; set; }

        /// <summary>
        /// Gets or Sets DiscordId
        /// </summary>
        [DataMember(Name = "discordId", EmitDefaultValue = false)]
        public string DiscordId { get; set; }

        /// <summary>
        /// Gets or Sets DiscordUsername
        /// </summary>
        [DataMember(Name = "discordUsername", EmitDefaultValue = false)]
        public string DiscordUsername { get; set; }

        /// <summary>
        /// Gets or Sets Wallets
        /// </summary>
        [DataMember(Name = "wallets", EmitDefaultValue = false)]
        public List<UserWalletsInner> Wallets { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class User {\n");
            sb.Append("  Uid: ").Append(Uid).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  ReferralCode: ").Append(ReferralCode).Append("\n");
            sb.Append("  ReferralCount: ").Append(ReferralCount).Append("\n");
            sb.Append("  ReferrerId: ").Append(ReferrerId).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  Picture: ").Append(Picture).Append("\n");
            sb.Append("  PhotoUrl: ").Append(PhotoUrl).Append("\n");
            sb.Append("  Disabled: ").Append(Disabled).Append("\n");
            sb.Append("  Roles: ").Append(Roles).Append("\n");
            sb.Append("  Bio: ").Append(Bio).Append("\n");
            sb.Append("  XpPoints: ").Append(XpPoints).Append("\n");
            sb.Append("  MainWallet: ").Append(MainWallet).Append("\n");
            sb.Append("  VouchersMerged: ").Append(VouchersMerged).Append("\n");
            sb.Append("  DiscordConfirmed: ").Append(DiscordConfirmed).Append("\n");
            sb.Append("  DiscordId: ").Append(DiscordId).Append("\n");
            sb.Append("  DiscordUsername: ").Append(DiscordUsername).Append("\n");
            sb.Append("  Wallets: ").Append(Wallets).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
