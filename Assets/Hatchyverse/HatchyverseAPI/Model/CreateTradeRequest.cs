/*
 * hatchyverse-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = HatchyverseAPI.Client.OpenAPIDateConverter;

namespace HatchyverseAPI.Model
{
    /// <summary>
    /// CreateTradeRequest
    /// </summary>
    [DataContract(Name = "CreateTrade_request")]
    public partial class CreateTradeRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateTradeRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateTradeRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateTradeRequest" /> class.
        /// </summary>
        /// <param name="offerAmounts">offerAmounts (required).</param>
        /// <param name="offerVoucherIds">offerVoucherIds (required).</param>
        /// <param name="requestAmounts">requestAmounts (required).</param>
        /// <param name="requestAssetsIds">requestAssetsIds (required).</param>
        public CreateTradeRequest(List<double> offerAmounts = default(List<double>), List<string> offerVoucherIds = default(List<string>), List<double> requestAmounts = default(List<double>), List<string> requestAssetsIds = default(List<string>))
        {
            // to ensure "offerAmounts" is required (not null)
            if (offerAmounts == null)
            {
                throw new ArgumentNullException("offerAmounts is a required property for CreateTradeRequest and cannot be null");
            }
            this.OfferAmounts = offerAmounts;
            // to ensure "offerVoucherIds" is required (not null)
            if (offerVoucherIds == null)
            {
                throw new ArgumentNullException("offerVoucherIds is a required property for CreateTradeRequest and cannot be null");
            }
            this.OfferVoucherIds = offerVoucherIds;
            // to ensure "requestAmounts" is required (not null)
            if (requestAmounts == null)
            {
                throw new ArgumentNullException("requestAmounts is a required property for CreateTradeRequest and cannot be null");
            }
            this.RequestAmounts = requestAmounts;
            // to ensure "requestAssetsIds" is required (not null)
            if (requestAssetsIds == null)
            {
                throw new ArgumentNullException("requestAssetsIds is a required property for CreateTradeRequest and cannot be null");
            }
            this.RequestAssetsIds = requestAssetsIds;
        }

        /// <summary>
        /// Gets or Sets OfferAmounts
        /// </summary>
        [DataMember(Name = "offerAmounts", IsRequired = true, EmitDefaultValue = true)]
        public List<double> OfferAmounts { get; set; }

        /// <summary>
        /// Gets or Sets OfferVoucherIds
        /// </summary>
        [DataMember(Name = "offerVoucherIds", IsRequired = true, EmitDefaultValue = true)]
        public List<string> OfferVoucherIds { get; set; }

        /// <summary>
        /// Gets or Sets RequestAmounts
        /// </summary>
        [DataMember(Name = "requestAmounts", IsRequired = true, EmitDefaultValue = true)]
        public List<double> RequestAmounts { get; set; }

        /// <summary>
        /// Gets or Sets RequestAssetsIds
        /// </summary>
        [DataMember(Name = "requestAssetsIds", IsRequired = true, EmitDefaultValue = true)]
        public List<string> RequestAssetsIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateTradeRequest {\n");
            sb.Append("  OfferAmounts: ").Append(OfferAmounts).Append("\n");
            sb.Append("  OfferVoucherIds: ").Append(OfferVoucherIds).Append("\n");
            sb.Append("  RequestAmounts: ").Append(RequestAmounts).Append("\n");
            sb.Append("  RequestAssetsIds: ").Append(RequestAssetsIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
