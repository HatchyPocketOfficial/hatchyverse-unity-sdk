/*
 * masters-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = HatchyverseAPI.Client.OpenAPIDateConverter;

namespace HatchyverseAPI.Model
{
    /// <summary>
    /// CreateGameSaveRequest
    /// </summary>
    [DataContract(Name = "CreateGameSave_request")]
    public partial class CreateGameSaveRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateGameSaveRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateGameSaveRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateGameSaveRequest" /> class.
        /// </summary>
        /// <param name="saveName">saveName.</param>
        /// <param name="data">data (required).</param>
        /// <param name="gameId">gameId (required).</param>
        public CreateGameSaveRequest(string saveName = default(string), Dictionary<string, Object> data = default(Dictionary<string, Object>), string gameId = default(string))
        {
            // to ensure "data" is required (not null)
            if (data == null)
            {
                throw new ArgumentNullException("data is a required property for CreateGameSaveRequest and cannot be null");
            }
            this.Data = data;
            // to ensure "gameId" is required (not null)
            if (gameId == null)
            {
                throw new ArgumentNullException("gameId is a required property for CreateGameSaveRequest and cannot be null");
            }
            this.GameId = gameId;
            this.SaveName = saveName;
        }

        /// <summary>
        /// Gets or Sets SaveName
        /// </summary>
        [DataMember(Name = "saveName", EmitDefaultValue = false)]
        public string SaveName { get; set; }

        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name = "data", IsRequired = true, EmitDefaultValue = true)]
        public Dictionary<string, Object> Data { get; set; }

        /// <summary>
        /// Gets or Sets GameId
        /// </summary>
        [DataMember(Name = "gameId", IsRequired = true, EmitDefaultValue = true)]
        public string GameId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateGameSaveRequest {\n");
            sb.Append("  SaveName: ").Append(SaveName).Append("\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  GameId: ").Append(GameId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
